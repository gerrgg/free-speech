{"version":3,"sources":["hooks/index.js","reducers/notificationReducer.js","services/comment.js","reducers/blogReducer.js","services/login.js","reducers/loginReducer.js","reducers/userReducer.js","store.js","components/Blogs.js","components/Comment.js","components/CreateCommentForm.js","components/Blog.js","components/LoginForm.js","components/Notification.js","components/LogoutButton.js","components/Header.js","components/Users.js","components/User.js","App.js","index.js"],"names":["useField","type","useState","value","setValue","onChange","event","target","onReset","useResource","baseUrl","token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","id","updatedObject","put","setToken","newToken","remove","delete","setNotification","notification","timeout","dispatch","clearTimeout","setTimeout","notificationReducer","state","action","blogID","comment","endpoint","blogService","blogReducer","filter","blog","likedBlog","find","n","changedBlog","likes","map","blogToUpdate","blogWithNewComment","comments","concat","newComment","login","credentials","loginReducer","userService","userReducer","reducer","combineReducers","loggedInUser","blogs","users","store","createStore","composeWithDevTools","applyMiddleware","thunk","Blogs","to","title","Comment","className","date","substring","moment","fromNow","commentDate","content","CreateCommentForm","useDispatch","useParams","onSubmit","preventDefault","commentService","console","log","message","commentOnBlog","BlogHeader","author","BlogUrl","url","href","BlogLikes","updatedBlog","user","onClick","objectToUpdate","BlogUser","username","BlogDeleteButton","BlogComments","length","key","Blog","LoginForm","password","loginService","window","localStorage","setItem","JSON","stringify","loginUser","Notification","useSelector","style","border","padding","borderWidth","LogoutButton","name","removeItem","Header","Logo","role","aria-label","User","Users","App","useEffect","getItem","userObject","parse","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ad0c9b47.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\n\nexport const useField = (type) => {\n  const [value, setValue] = useState(\"\");\n\n  const onChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const onReset = () => {\n    setValue(\"\");\n  };\n\n  return {\n    type,\n    value,\n    onChange,\n    onReset,\n  };\n};\n\nexport const useResource = (baseUrl) => {\n  let token = null;\n\n  const setToken = (newToken) => {\n    token = `bearer ${newToken}`;\n  };\n\n  const getAll = async () => {\n    const response = await axios.get(baseUrl);\n    return response.data;\n  };\n\n  const create = async (newObject) => {\n    // set authorization headers\n    const config = {\n      headers: { Authorization: token },\n    };\n\n    const response = await axios.post(baseUrl, newObject, config);\n    return response.data;\n  };\n\n  const update = async (id, updatedObject) => {\n    const response = await axios.put(`${baseUrl}/${id}`, updatedObject);\n    return response.data;\n  };\n\n  const remove = async (id) => {\n    const config = {\n      headers: { Authorization: token },\n    };\n\n    axios.delete(`${baseUrl}/${id}`, config);\n  };\n\n  const service = {\n    create,\n    getAll,\n    update,\n    setToken,\n    remove,\n  };\n\n  return service;\n};\n","const notificationReducer = (state = null, action) => {\n  switch (action.type) {\n    case \"SET_NOTIFICATION\":\n      return action.data.notification;\n\n    default:\n      return state;\n  }\n};\n\nexport const setNotification = (notification, timeout = 5000) => {\n  return async (dispatch) => {\n    // set the notification\n    dispatch({\n      type: \"SET_NOTIFICATION\",\n      data: {\n        notification,\n      },\n    });\n\n    // set a timeout for the notification\n    clearTimeout();\n    setTimeout(() => {\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        data: {\n          notification: null,\n        },\n      });\n    }, timeout);\n  };\n};\n\nexport default notificationReducer;\n","import axios from \"axios\";\nconst baseUrl = \"http://localhost:3003/api/comments\";\n\nconst create = async (blogID, comment) => {\n  const endpoint = `http://localhost:3003/api/blogs/${blogID}/comments`;\n  const response = await axios.post(endpoint, comment);\n\n  return response.data;\n};\n\nexport default { create };\n","import { useResource } from \"../hooks/index\";\nimport { setNotification } from \"./notificationReducer\";\nimport commentService from \"../services/comment\";\n\nconst blogService = useResource(\"http://localhost:3003/api/blogs\");\n\nconst blogReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"INIT_BLOGS\":\n      return action.data;\n\n    case \"NEW_BLOG\": {\n      return [...state, action.data];\n    }\n\n    case \"DELETE_BLOG\": {\n      const id = action.data.id;\n      return state.filter((blog) => blog.id !== id);\n    }\n\n    case \"LIKE_BLOG\": {\n      const id = action.data.id;\n      const likedBlog = state.find((n) => n.id === id);\n\n      const changedBlog = {\n        ...likedBlog,\n        likes: likedBlog.likes + 1,\n      };\n\n      return state.map((blog) => (blog.id !== id ? blog : changedBlog));\n    }\n\n    case \"UPDATE_BLOG_COMMENTS\": {\n      const blogID = action.data.id;\n\n      const blogToUpdate = state.find((n) => n.id === blogID);\n\n      const blogWithNewComment = {\n        ...blogToUpdate,\n        comments: blogToUpdate.comments.concat(action.data.newComment),\n      };\n\n      return state.map((blog) =>\n        blog.id !== blogID ? blog : blogWithNewComment\n      );\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const commentOnBlog = (blogID, comment) => {\n  return async (dispatch) => {\n    try {\n      const newComment = await commentService.create(blogID, comment);\n\n      dispatch({\n        type: \"UPDATE_BLOG_COMMENTS\",\n        data: { id: blogID, newComment: newComment.id },\n      });\n\n      dispatch(setNotification(\"Comment successful\"));\n    } catch (e) {\n      console.log(e);\n      dispatch(setNotification(`Update failed: ${e.message}`));\n    }\n  };\n};\n\nexport const createBlog = (blog) => {\n  return async (dispatch) => {\n    try {\n      const createdBlog = await blogService.create(blog);\n\n      dispatch({\n        type: \"NEW_BLOG\",\n        data: createdBlog,\n      });\n\n      dispatch(\n        setNotification(\n          `${createdBlog.title} by ${createdBlog.author} created!`\n        )\n      );\n    } catch (e) {\n      dispatch(setNotification(`Creating blog failed: ${e.message}`));\n    }\n  };\n};\n\nexport const deleteBlog = (id, token) => {\n  return async (dispatch) => {\n    try {\n      // DO NOT USE SELECTORS IN THE REDUCER\n      await blogService.remove(id, token);\n\n      dispatch({\n        type: \"DELETE_BLOG\",\n        data: { id },\n      });\n\n      dispatch(setNotification(\"Delete successful\"));\n    } catch (e) {\n      console.log(e);\n      dispatch(setNotification(`Delete failed: ${e.message}`));\n    }\n  };\n};\n\nexport const likeBlog = (id, objectToUpdate) => {\n  return async (dispatch) => {\n    try {\n      const updatedObject = {\n        ...objectToUpdate,\n        likes: objectToUpdate.likes + 1,\n      };\n\n      console.log(id, updatedObject);\n\n      await blogService.update(id, updatedObject);\n\n      dispatch({\n        type: \"LIKE_BLOG\",\n        data: { id },\n      });\n\n      dispatch(setNotification(\"Update successful\"));\n    } catch (e) {\n      console.log(e);\n      dispatch(setNotification(`Update failed: ${e.message}`));\n    }\n  };\n};\n\nexport const initializeBlogs = () => {\n  return async (dispatch) => {\n    const blogs = await blogService.getAll();\n    dispatch({\n      type: \"INIT_BLOGS\",\n      data: blogs,\n    });\n  };\n};\n\nexport default blogReducer;\n","import axios from \"axios\";\nconst baseUrl = \"http://localhost:3003/api/login\";\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default { login };\n","import loginService from \"../services/login\";\nimport { useResource } from \"../hooks/index\";\n\nimport { setNotification } from \"../reducers/notificationReducer\";\n\nconst blogService = useResource(\"http://localhost:3003/api/blogs\");\n\nconst loginReducer = (state = null, action) => {\n  // console.log(\"STATE:\", state);\n  // console.log(\"ACTION:\", action);\n\n  switch (action.type) {\n    case \"LOGIN_USER\": {\n      return action.data;\n    }\n\n    case \"LOGOUT_USER\":\n      return null;\n\n    default:\n      return state;\n  }\n};\n\n// check local storage and cookes for user object on init\nexport const initializeLogin = () => {\n  return async (dispatch) => {\n    // check local storage for user object\n    const loggedInUser = window.localStorage.getItem(\"loggedInUser\");\n\n    if (loggedInUser) {\n      // Parse JSON for user object\n      const userObject = JSON.parse(loggedInUser);\n\n      blogService.setToken(userObject.token);\n\n      // dispatch user data to frontend\n      dispatch({\n        type: \"LOGIN_USER\",\n        data: userObject,\n      });\n    }\n  };\n};\n\nexport const loginUser = (username, password) => {\n  return async (dispatch) => {\n    try {\n      const user = await loginService.login({\n        username,\n        password,\n      });\n\n      // set to local storage\n      window.localStorage.setItem(\"loggedInUser\", JSON.stringify(user));\n\n      // set token for blogs\n      blogService.setToken(user.token);\n\n      dispatch({ type: \"LOGIN_USER\", data: user });\n      dispatch(setNotification(\"Login successful\"));\n    } catch (e) {\n      dispatch(setNotification(\"Invalid password / username combo\"));\n    }\n  };\n};\n\nexport const logoutUser = () => {\n  return async (dispatch) => {\n    window.localStorage.removeItem(\"loggedInUser\");\n    dispatch({ type: \"LOGOUT_USER\" });\n  };\n};\n\nexport default loginReducer;\n","import { useResource } from \"../hooks/index\";\n\nconst userService = useResource(\"http://localhost:3003/api/users\");\n\nconst userReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"INIT_USERS\":\n      return action.data;\n\n    default:\n      return state;\n  }\n};\n\nexport const initializeUsers = () => {\n  return async (dispatch) => {\n    const users = await userService.getAll();\n    dispatch({\n      type: \"INIT_USERS\",\n      data: users,\n    });\n  };\n};\n\nexport default userReducer;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport blogReducer from \"./reducers/blogReducer\";\nimport notificationReducer from \"./reducers/notificationReducer\";\nimport loginReducer from \"./reducers/loginReducer\";\nimport userReducer from \"./reducers/userReducer\";\n\nconst reducer = combineReducers({\n  loggedInUser: loginReducer,\n  blogs: blogReducer,\n  notification: notificationReducer,\n  users: userReducer,\n});\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Blogs = ({ blogs }) => {\n  if (!blogs) return null;\n\n  return (\n    <ul>\n      {blogs.map((blog) => (\n        <li>\n          <Link to={`/blog/${blog.id}`}>{blog.title}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Blogs;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Comment = ({ comment }) => {\n  const commentDate = () => {\n    const date = comment.date.substring(0, 10);\n    return moment(date, \"YYYY-MM-DD\").fromNow();\n  };\n\n  return (\n    <div className=\"comment\">\n      <small className=\"posted-on\">{commentDate()}</small>\n      <p className=\"content\">{comment.content}</p>\n    </div>\n  );\n};\n\nexport default Comment;\n","import React from \"react\";\n\nimport { useParams } from \"react-router-dom\";\nimport { commentOnBlog } from \"../reducers/blogReducer\";\n\nimport { useDispatch } from \"react-redux\";\nimport { useField } from \"../hooks\";\n\nconst CreateCommentForm = () => {\n  const dispatch = useDispatch();\n  const blogID = useParams().id;\n\n  const content = useField(\"text\");\n\n  const handleCreateComment = (event) => {\n    event.preventDefault();\n\n    const newComment = {\n      content: content.value,\n    };\n\n    dispatch(commentOnBlog(blogID, newComment));\n\n    content.onReset();\n  };\n\n  return (\n    <form onSubmit={handleCreateComment}>\n      <p>\n        Comment:\n        <input {...content} />\n        <button>Comment</button>\n      </p>\n    </form>\n  );\n};\n\nexport default CreateCommentForm;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { deleteBlog, likeBlog } from \"../reducers/blogReducer\";\nimport { useParams } from \"react-router-dom\";\n\nimport Comment from \"./Comment\";\nimport CreateCommentForm from \"./CreateCommentForm\";\n\nconst Blog = ({ blogs, loggedInUser }) => {\n  // get id from url parameter\n  const id = useParams().id;\n\n  // find the blog by finding the blog with the same id as the param\n  const blog = blogs.find((n) => n.id === id);\n\n  // do nothing without a blog\n  if (!blog) return null;\n\n  return (\n    <div className=\"blog\">\n      <BlogHeader blog={blog} />\n      <BlogUrl url={blog.url} />\n      <BlogLikes blog={blog} />\n      <BlogUser user={blog.user} />\n      <BlogDeleteButton\n        blogID={blog.id}\n        user={blog.user}\n        loggedInUser={loggedInUser}\n      />\n      <CreateCommentForm />\n      <BlogComments comments={blog.comments} />\n    </div>\n  );\n};\n\nconst BlogHeader = ({ blog }) => (\n  <h2 className=\"header\">\n    {blog.title} - {blog.author ? blog.author : \"No Author\"}\n  </h2>\n);\n\nconst BlogUrl = ({ url }) => (\n  <p className=\"url\">\n    URL: <a href={url}>{url}</a>\n  </p>\n);\n\nconst BlogLikes = ({ blog }) => {\n  const dispatch = useDispatch();\n\n  // copy of the blog to pass to update\n  const updatedBlog = { ...blog, user: blog.user.id };\n\n  return (\n    <div className=\"likes\">\n      <p>Likes: {blog.likes}</p>\n      <button\n        className=\"likesButton\"\n        onClick={() => dispatch(likeBlog(blog.id, updatedBlog))} // PASS USER PROP AS JUST USER.ID\n      >\n        Like\n      </button>\n    </div>\n  );\n};\n\nconst BlogUser = ({ user }) => (\n  <p className=\"user\">\n    User: {user ? <Link to={`/user/${user.id}`}>{user.username}</Link> : null}\n  </p>\n);\n\nconst BlogDeleteButton = ({ blogID, user, loggedInUser }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"deleteButton\">\n      {user.id === loggedInUser.id ? (\n        <button\n          className=\"delete\"\n          onClick={() => dispatch(deleteBlog(blogID, loggedInUser.token))}\n        >\n          Delete\n        </button>\n      ) : null}\n    </div>\n  );\n};\n\nconst BlogComments = ({ comments }) => {\n  if (comments.length === 0) return null;\n\n  return (\n    <div className=\"comments\">\n      <h4>Comments</h4>\n      {comments.map((comment) => (\n        <Comment key={comment.id} comment={comment} />\n      ))}\n    </div>\n  );\n};\n\nexport default Blog;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useField } from \"../hooks\";\nimport { loginUser } from \"../reducers/loginReducer\";\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const username = useField(\"text\");\n  const password = useField(\"password\");\n\n  const handleLogin = (event) => {\n    event.preventDefault();\n    dispatch(loginUser(username.value, password.value));\n  };\n\n  return (\n    <form id=\"loginForm\" onSubmit={handleLogin}>\n      <h1>Login</h1>\n      <p>\n        Username\n        <input {...username} />\n      </p>\n      <p>\n        Password\n        <input {...password} />\n      </p>\n      <button id=\"loginButton\" type=\"submit\">\n        login\n      </button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst Notification = () => {\n  const notification = useSelector((state) => state.notification);\n\n  if (!notification) return null;\n\n  const style = {\n    border: \"solid\",\n    padding: 10,\n    borderWidth: 1,\n  };\n\n  return <div style={style}>{notification}</div>;\n};\n\nexport default Notification;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logoutUser } from \"../reducers/loginReducer\";\n\nconst LogoutButton = () => {\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => state.loggedInUser);\n\n  return (\n    <div id=\"logoutButton\">\n      <strong>{user.name} is logged in</strong>\n      <br />\n      <button onClick={() => dispatch(logoutUser())}>Logout</button>\n    </div>\n  );\n};\n\nexport default LogoutButton;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport LogoutButton from \"./LogoutButton\";\n\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n  const Logo = () => (\n    <a href=\"/\" id=\"logo\">\n      Free Speech\n      <span role=\"img\" aria-label=\"parrot\">\n        🤐\n      </span>\n    </a>\n  );\n\n  const user = useSelector((state) => state.loggedInUser);\n\n  return (\n    <nav id=\"header\">\n      <Logo />\n      <Link to=\"/\">home</Link>\n      <Link to=\"/users\">Users</Link>\n      <div className=\"header-right\">{user ? <LogoutButton /> : null}</div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Users = ({ users }) => {\n  return (\n    <div id=\"users\">\n      <h2>Users</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>User</th>\n            <th>Blogs created</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map((user) => (\n            <User key={user.id} user={user} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst User = ({ user }) => (\n  <tr>\n    <td>\n      <Link to={`/user/${user.id}`}>{user.name}</Link>\n    </td>\n    <td>{user.blogs.length}</td>\n  </tr>\n);\n\nexport default Users;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Blogs from \"./Blogs\";\n\nconst User = ({ users }) => {\n  const id = useParams().id;\n\n  const user = users.find((n) => id === n.id);\n\n  if (!user) return null;\n\n  return (\n    <div id=\"user\">\n      <h2 className=\"title\">\n        {user.username} <span className=\"name\">&lt;{user.name}&gt;</span>\n      </h2>\n      <h5>Blogs</h5>\n      <ul className=\"blogs\">\n        <Blogs blogs={user.blogs} />\n      </ul>\n    </div>\n  );\n};\n\nexport default User;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.scss\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\n// components\nimport Blogs from \"./components/Blogs\";\nimport Blog from \"./components/Blog\";\nimport LoginForm from \"./components/LoginForm\";\nimport Notification from \"./components/Notification\";\nimport Header from \"./components/Header\";\nimport Users from \"./components/Users\";\nimport User from \"./components/User\";\n\n// reducers\nimport { initializeBlogs } from \"./reducers/blogReducer\";\nimport { initializeLogin } from \"./reducers/loginReducer\";\nimport { initializeUsers } from \"./reducers/userReducer\";\n\n// GO!\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(initializeLogin());\n    dispatch(initializeBlogs());\n    dispatch(initializeUsers());\n  }, [dispatch]);\n\n  const state = useSelector((state) => state);\n\n  return (\n    <Router>\n      <div>\n        <Header />\n        <Notification />\n\n        <Switch>\n          <Route path=\"/users\">\n            <Users users={state.users} />\n          </Route>\n          <Route path=\"/user/:id\">\n            <User users={state.users} />\n          </Route>\n          <Route path=\"/blog/:id\">\n            <Blog blogs={state.blogs} loggedInUser={state.loggedInUser} />\n          </Route>\n\n          <Route\n            path=\"/\"\n            render={() =>\n              state.loggedInUser ? <Blogs blogs={state.blogs} /> : <LoginForm />\n            }\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}